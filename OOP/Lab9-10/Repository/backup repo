

Repository::Repository() {
    this->currentSize = 0;
    this->maxSize = 0;
    this->repo = new Bilet[5];
}

Repository::Repository(int size, int maxSize, Bilet* repo) {
    this->currentSize = size;
    this->maxSize = maxSize;
    this->repo = new Bilet[size];
    for(int i =0;i< size; i++)
        this->repo[i] = repo[i];
}

Repository::Repository(const Repository &repo) {
    this->currentSize = repo.currentSize;
    this->maxSize = repo.maxSize;
    this->repo = new Bilet[repo.currentSize];
    for(int i=0;i<repo.currentSize;i++)
        this->repo[i] = repo.repo[i];
}

Repository::~Repository() {
//    delete[] this->repo;
}
//GETTER SETTER
int Repository::getSize() {
    return this->currentSize;
}

int Repository::getMaxSize() {
    return this->maxSize;
}

void Repository::setRepo(Bilet* repo) {
    this->repo = repo;
}

void Repository::setSize(int size) {
    this->currentSize = size;
}

void Repository::setMaxSize(int maxSize) {
    this->maxSize = maxSize;
}
//OTHER OPERATIONS

void Repository::addBilet(Bilet &bilet) {
    this->repo[this->currentSize] = bilet;
    this->currentSize++;
}

Bilet Repository::getElem(int pos) {
    return this->repo[pos];
}

Bilet *Repository::getRepo() {
    return this->repo;
}